#!/bin/bash -i

function buffer()
{
    local buffer=""
    local stdout=""
    while true
    do
        IFS= read -N 1 -t 0.1 char
        local status=$?
        if [[ $status -eq 0 ]]; then
            buffer+="$char"
            stdout+="$char"
        elif [[ $status -gt 128 ]]; then
            if [[ ${#buffer} -gt 0 ]]; then
                echo -n "$buffer" >&3
                buffer=""
            fi
        else
            break
        fi
    done
    echo "$stdout"
}

# input via stdin
# http://stackoverflow.com/a/18766794/5156190
if [ $# -eq 0 ]; then

    # allow input via pipe, disallow interactive input (as potentially confusing)
    if [ -t 0 ]; then
        echo "Careful, you forgot to tell me with which command you need help!"
        exit 1
    else
        script=$(cat)
    fi

# input via cmd
# http://stackoverflow.com/a/12451419/5156190
else
    exec 3>&1
    script=$(stdbuf -e 0 -o 0 bash -c -i "trap echo INT ; $*" |& buffer)
fi

# URL for POST
if [ -z "$APP_URL" ]; then
    APP_URL=https://help.cs50.net/
fi

# POST /
echo -en "\033[33m";
echo -e -n "Asking for help..."
stdout="$(
    curl \
    --data-urlencode "cmd=${*}" \
    --data-urlencode "format=txt" \
    --data-urlencode "script=${script}" \
    --data-urlencode "username=${C9_USER}" \
    --fail \
    "$APP_URL" \
    2> /dev/null
)"
status=$?
printf "\r%${COLUMNS}s\r"
if [ $status -eq 0 ]; then
    echo "$stdout" | fold -s -w "$COLUMNS"
else
    echo "Ack, there seems to be a bug in help50!"
    echo "Please let sysadmins@cs50.harvard.edu known with which error you need help!"
fi
echo -en "\033[39m"
